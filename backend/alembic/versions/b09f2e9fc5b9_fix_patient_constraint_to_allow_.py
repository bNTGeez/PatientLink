"""Fix patient constraint to allow unassigned patients

Revision ID: b09f2e9fc5b9
Revises: 5a5fa9d6172d
Create Date: 2025-06-22 22:41:37.846940

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b09f2e9fc5b9'
down_revision: Union[str, None] = '5a5fa9d6172d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop the old constraint
    op.drop_constraint('check_doctor_patient_constraint', 'users', type_='check')
    
    # Add the new constraint that allows patients without doctors
    op.create_check_constraint(
        'check_doctor_patient_constraint',
        'users',
        "(role = 'doctor' AND doctor_id IS NULL) OR role = 'patient'"
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop the new constraint
    op.drop_constraint('check_doctor_patient_constraint', 'users', type_='check')
    
    # Restore the old constraint
    op.create_check_constraint(
        'check_doctor_patient_constraint',
        'users',
        "(role = 'doctor' AND doctor_id IS NULL) OR (role = 'patient' AND doctor_id IS NOT NULL)"
    )
    # ### end Alembic commands ###
